

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Customer : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Customer entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Customer()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Customer(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Customer> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Customer.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customer_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customer_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CustomerID
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.CustomerID);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.CustomerID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CompanyName
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.CompanyName);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.CompanyName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactName
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.ContactName);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.ContactName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactTitle
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.ContactTitle);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.ContactTitle, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTitle_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTitle_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTitle_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Address);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Address, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string City
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.City);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Region
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Region);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Region, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Region_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Region_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Region_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PostalCode
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.PostalCode);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.PostalCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PostalCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PostalCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PostalCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Country
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Country);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Country, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Phone
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Phone);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Phone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Fax
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Fax);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Customer,
                global::LightSwitchApplication.Customer.DetailsClass,
                global::LightSwitchApplication.Customer.DetailsClass.IImplementation,
                global::LightSwitchApplication.Customer.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.CustomerID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>.Entry
                __CustomerEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>.Entry(
                    global::LightSwitchApplication.Customer.DetailsClass.__Customer_CreateNew,
                    global::LightSwitchApplication.Customer.DetailsClass.__Customer_Created,
                    global::LightSwitchApplication.Customer.DetailsClass.__Customer_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Customer __Customer_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Customer> es)
            {
                return new global::LightSwitchApplication.Customer(es);
            }
            private static void __Customer_Created(global::LightSwitchApplication.Customer e)
            {
                e.Customer_Created();
            }
            private static bool __Customer_AllowSaveWithErrors(global::LightSwitchApplication.Customer e)
            {
                bool result = false;
                e.Customer_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Customer.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> CustomerID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.CustomerID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> CompanyName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.CompanyName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> ContactName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.ContactName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> ContactTitle
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.ContactTitle) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> Address
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Address) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> Region
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Region) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> PostalCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.PostalCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> Country
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Country) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> Phone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Phone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string CustomerID { get; set; }
                new string CompanyName { get; set; }
                new string ContactName { get; set; }
                new string ContactTitle { get; set; }
                new string Address { get; set; }
                new string City { get; set; }
                new string Region { get; set; }
                new string PostalCode { get; set; }
                new string Country { get; set; }
                new string Phone { get; set; }
                new string Fax { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    CustomerID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "CustomerID",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CustomerID_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CustomerID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CustomerID_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CustomerID_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CustomerID_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CustomerID_OnValueChanged);
                private static void _CustomerID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomerID, sf);
                }
                private static bool _CustomerID_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.CustomerID_IsReadOnly(ref result);
                    return result;
                }
                private static void _CustomerID_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CustomerID_Validate(r);
                }
                private static string _CustomerID_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.CustomerID;
                }
                private static void _CustomerID_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CustomerID = v;
                }
                private static void _CustomerID_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.CustomerID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    CompanyName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "CompanyName",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CompanyName_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CompanyName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CompanyName_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CompanyName_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CompanyName_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._CompanyName_OnValueChanged);
                private static void _CompanyName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._CompanyName, sf);
                }
                private static bool _CompanyName_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.CompanyName_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompanyName_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompanyName_Validate(r);
                }
                private static string _CompanyName_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.CompanyName;
                }
                private static void _CompanyName_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CompanyName = v;
                }
                private static void _CompanyName_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.CompanyName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    ContactName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "ContactName",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactName_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactName_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactName_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactName_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactName_OnValueChanged);
                private static void _ContactName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactName, sf);
                }
                private static bool _ContactName_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.ContactName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactName_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactName_Validate(r);
                }
                private static string _ContactName_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactName;
                }
                private static void _ContactName_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactName = v;
                }
                private static void _ContactName_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.ContactName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    ContactTitle = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "ContactTitle",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactTitle_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactTitle_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactTitle_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactTitle_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactTitle_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._ContactTitle_OnValueChanged);
                private static void _ContactTitle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactTitle, sf);
                }
                private static bool _ContactTitle_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.ContactTitle_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactTitle_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactTitle_Validate(r);
                }
                private static string _ContactTitle_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactTitle;
                }
                private static void _ContactTitle_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactTitle = v;
                }
                private static void _ContactTitle_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.ContactTitle_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    Address = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "Address",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Address_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Address_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Address_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Address_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Address_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Address_OnValueChanged);
                private static void _Address_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._Address, sf);
                }
                private static bool _Address_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.Address_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address_Validate(r);
                }
                private static string _Address_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.Address;
                }
                private static void _Address_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address = v;
                }
                private static void _Address_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.Address_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "City",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._City_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._City_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._City_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._City_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._City_OnValueChanged);
                private static void _City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._City, sf);
                }
                private static bool _City_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.City_IsReadOnly(ref result);
                    return result;
                }
                private static void _City_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.City_Validate(r);
                }
                private static string _City_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.City;
                }
                private static void _City_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.City = v;
                }
                private static void _City_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    Region = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "Region",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Region_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Region_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Region_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Region_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Region_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Region_OnValueChanged);
                private static void _Region_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._Region, sf);
                }
                private static bool _Region_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.Region_IsReadOnly(ref result);
                    return result;
                }
                private static void _Region_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Region_Validate(r);
                }
                private static string _Region_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.Region;
                }
                private static void _Region_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Region = v;
                }
                private static void _Region_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.Region_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    PostalCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "PostalCode",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._PostalCode_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._PostalCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._PostalCode_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._PostalCode_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._PostalCode_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._PostalCode_OnValueChanged);
                private static void _PostalCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._PostalCode, sf);
                }
                private static bool _PostalCode_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.PostalCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _PostalCode_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PostalCode_Validate(r);
                }
                private static string _PostalCode_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.PostalCode;
                }
                private static void _PostalCode_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PostalCode = v;
                }
                private static void _PostalCode_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.PostalCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    Country = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "Country",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Country_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Country_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Country_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Country_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Country_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Country_OnValueChanged);
                private static void _Country_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._Country, sf);
                }
                private static bool _Country_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.Country_IsReadOnly(ref result);
                    return result;
                }
                private static void _Country_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Country_Validate(r);
                }
                private static string _Country_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.Country;
                }
                private static void _Country_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Country = v;
                }
                private static void _Country_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.Country_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    Phone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "Phone",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Phone_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Phone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Phone_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Phone_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Phone_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Phone_OnValueChanged);
                private static void _Phone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._Phone, sf);
                }
                private static bool _Phone_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.Phone_IsReadOnly(ref result);
                    return result;
                }
                private static void _Phone_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Phone_Validate(r);
                }
                private static string _Phone_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.Phone;
                }
                private static void _Phone_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Phone = v;
                }
                private static void _Phone_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.Phone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "Fax",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Fax_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Fax_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Fax_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Fax_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Fax_OnValueChanged);
                private static void _Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._Fax, sf);
                }
                private static bool _Fax_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Fax_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Fax_Validate(r);
                }
                private static string _Fax_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.Fax;
                }
                private static void _Fax_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Fax = v;
                }
                private static void _Fax_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.Fax_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _CustomerID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _CompanyName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _ContactName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _ContactTitle;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _Address;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _Region;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _PostalCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _Country;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _Phone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _Fax;
            
        }
    
        #endregion
    }
    
    #endregion
}
